from web3 import Web3
from tests.utils import run_test, load_contract

contract_node_operador_registry = load_contract(
    "46ddc39e780088b1b146aba8cbbe15dc321a1a1d"
)

def test_update_operator_reward(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xe8f28a6c00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f000000000000000000000000b794f5ea0ba39494ce839613fffba74279579268"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_update_operator_name(backend, firmware, navigator, test_name, wallet_addr):
    data = "0x9f5db69c00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000067a6f6e6461780000000000000000000000000000000000000000000000000000"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_update_operator_address(backend, firmware, navigator, test_name, wallet_addr):
    data = "0x32f7325800000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f000000000000000000000000b794f5ea0ba39494ce839613fffba74279579268"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_initialize(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xc4d66de800000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_enable_operator(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xdd307b9900000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_disable_operator(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xf56408ed00000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_add_operator(backend, firmware, navigator, test_name, wallet_addr):
    data = "0x54741d6d000000000000000000000000000000000000000000000000000000000000006000000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f000000000000000000000000b794f5ea0ba39494ce839613fffba7427957926800000000000000000000000000000000000000000000000000000000000000067a6f6e6461780000000000000000000000000000000000000000000000000000"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_use_pks_validator(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xc39535020000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000030a830a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd725000000000000000000000000000000000"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_delete_active_validators(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xeda74e7100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000030a830a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd7250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030a630a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd7250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030a930a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd725000000000000000000000000000000000"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_delete_pending_validators(backend, firmware, navigator, test_name, wallet_addr):
    data = "0x242eba0e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000030a830a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd7250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030a630a2cdf529ee03386076cc773570abd23bd6b10d8b1375e17a06dd0d2e759b6cb1168acd99117fcf26c15777dd725000000000000000000000000000000000"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_withdrawerc20(backend, firmware, navigator, test_name, wallet_addr):
    data = "0xf4f3b20000000000000000000000000071c7656ec7ab88b098defb751b7401b5f6d8976f"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )

def test_add_new_validator(backend, firmware, navigator, test_name, wallet_addr):
    data = "0x60ec52160000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000003086ba07b84fbbc02640f035618c61c27780d749bd6f2f4743dd03bf69cd3673f94042c2c59ad4bfeff2cad5959127e22f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060aab15cce35e4cf71fd1b28a212d8bac446c78193175e894e206da4a890680a9a1c2d2b0e492df674d9c7625a52a1969a028503fed079a9f5d46fdfbf63e4c0548112c42692cfdaa9a08e45a9b4acd74860906bd34ff7ce23ef2b1c8e68625d1d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000309506eba76c56fa941904140efa7c723e95cf5d48bfe929a181a771a5200eb4847006c1324d8087cf946119bb6650a3820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000609166116b3a52c5de4f3a89b3a3fd03f96c1e72b50e5df00c669a3ed3d642ab067e727b521c693849bf7eb2d1e270664714a866c4c174e33032048fdc64d6aea5545ae2741e838b284010271de3dd03baab83c014dbffe384bbbb8d464d19aff8"
    run_test(
        contract_node_operador_registry, 
        data, 
        backend, 
        firmware, 
        navigator, 
        test_name, 
        wallet_addr
    )
